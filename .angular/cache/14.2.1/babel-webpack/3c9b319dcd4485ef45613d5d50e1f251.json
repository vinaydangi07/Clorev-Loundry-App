{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators, UntypedFormControl } from '@angular/forms';\nimport { RegSuccessDialogComponent } from 'src/app/models/reg-success-dialog/reg-success-dialog.component';\nlet ServicePanelRegisterComponent = class ServicePanelRegisterComponent {\n  constructor(modalService, formBuilder, servicePanelRegisterService, http, router) {\n    this.modalService = modalService;\n    this.formBuilder = formBuilder;\n    this.servicePanelRegisterService = servicePanelRegisterService;\n    this.http = http;\n    this.router = router;\n    this.fileName = '';\n    this.x = false;\n    this.websiteList = [{\n      id: 1,\n      name: 'Laundry'\n    }, {\n      id: 2,\n      name: 'Dry Cleaning'\n    }, {\n      id: 3,\n      name: 'Steam Press'\n    }, {\n      id: 4,\n      name: 'Shoe and leather care'\n    }, {\n      id: 5,\n      name: 'Fumigation and Sanitation'\n    }];\n  }\n\n  callGetImgFunction(event, id) {\n    getimg(event, id);\n  }\n\n  callcloseImageFunction(inputId, dpUpload, dpImg, dpImgClose) {\n    closeImage(inputId, dpUpload, dpImg, dpImgClose);\n  }\n\n  submitVendorForm() {\n    submitVendorFormData();\n  }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      designation: ['', Validators.required],\n      name: ['', Validators.required],\n      mobileNumber: ['', Validators.required],\n      emailId: ['', Validators.required],\n      altMobileNumber: ['', Validators.required],\n      shopName: ['', Validators.required],\n      gstin: ['', Validators.required],\n      panNumber: ['', Validators.required],\n      uamNumber: ['', Validators.required],\n      accountHolderName: ['', Validators.required],\n      accountNumber: ['', Validators.required],\n      branchIfscCode: ['', Validators.required],\n      address1: ['', Validators.required],\n      address2: ['', Validators.required],\n      serviceOffered: this.formBuilder.array([], [Validators.required]),\n      // serviceOffered: ['', Validators.required],\n      expressDeliveryFlag: [true, Validators.required],\n      weeklyOff: ['', Validators.required],\n      landmark: ['', Validators.required] // ShopNameImg: ['',Validators.required]\n\n    });\n  }\n\n  onchange(e) {\n    const serviceOffered = this.registerForm.get('serviceOffered');\n\n    if (e.target.checked) {\n      serviceOffered.push(new UntypedFormControl(e.target.value));\n      console.log(serviceOffered.value);\n    } else {\n      const index = serviceOffered.controls.findIndex(x => x.value === e.target.value);\n      serviceOffered.removeAt(index);\n    }\n  }\n\n  uploadfiles() {\n    this.loadcomponent = true;\n  }\n\n  shopNameImg(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.registerForm.get('ShopNameImg').setValue(file);\n    }\n\n    const formData = new FormData();\n    formData.append('file', this.registerForm.get('ShopNameImg').value);\n    this.servicePanelRegisterService.shopImg(this.registerForm.value).subscribe(sucess => {\n      console.log(\"Image Uploaded\");\n    });\n  }\n\n  open() {\n    const modalRef = this.modalService.open(RegSuccessDialogComponent);\n    modalRef.componentInstance.lesson = this.data;\n  }\n\n  register() {\n    // console.log(\"shopNameImg \"+this.registerForm.get('shopNameImg').value);\n    if (!this.registerForm.get('designation').value) {\n      this.registerForm.get('designation').setValue(\"Mr\");\n    }\n\n    console.log(this.registerForm.value);\n    console.log(\"Reached Componenet\" + this.registerForm.value);\n    this.servicePanelRegisterService.register(this.registerForm.value).subscribe( //  success=>console.log(success.map(response=>response.json())),\n    response => {\n      this.resmsg = response;\n      console.log(this.resmsg);\n    });\n    console.log(this.resmsg);\n  } // name() {\n  //   alert(\"name function\");\n  // }\n  // redirectToSuccessComponent(): void{\n  //   // this.router.navigateByUrl(\"app-success-submited\");\n  //   // alert(\"hello\");\n  // }\n\n\n  openModal(content) {\n    const modalRef = this.modalService.open(content, {\n      centered: true\n    });\n    setTimeout(() => {\n      modalRef.close();\n      this.router.navigateByUrl(''); // Replace '/other-page' with the actual URL of the page you want to navigate to\n    }, 5000);\n  }\n\n};\nServicePanelRegisterComponent = __decorate([Component({\n  selector: 'app-service-panel-register',\n  templateUrl: './service-panel-register.component.html',\n  styleUrls: ['./service-panel-register.component.css']\n})], ServicePanelRegisterComponent);\nexport { ServicePanelRegisterComponent };","map":null,"metadata":{},"sourceType":"module"}