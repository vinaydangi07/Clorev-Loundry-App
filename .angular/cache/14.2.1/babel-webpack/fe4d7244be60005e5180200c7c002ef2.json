{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ServiceProviderComponent = class ServiceProviderComponent {\n  constructor(userService, mapService, servicePanelService, el) {\n    this.userService = userService;\n    this.mapService = mapService;\n    this.servicePanelService = servicePanelService;\n    this.el = el;\n    this.vendorReviews = [{\n      id: 1,\n      customerName: 'test_user',\n      rating: 4\n    }, {\n      id: 2,\n      customerName: 'test_user 2',\n      rating: 4\n    }, {\n      id: 3,\n      customerName: 'test_user 3',\n      rating: 5\n    }, {\n      id: 8,\n      customerName: 'Aman',\n      rating: 3\n    }, {\n      id: 9,\n      customerName: 'Aditya',\n      rating: 2\n    }];\n    this.vendorsArray = [];\n    this.ratingsData = {\n      totalRatings: 100,\n      totalReview: 50,\n      ratings: {\n        5: 50,\n        4: 25,\n        3: 10,\n        2: 10,\n        1: 5\n      }\n    };\n  }\n\n  getPercentage(ratings) {\n    return this.ratingsData.ratings[ratings] / this.ratingsData.totalRatings * 100;\n  }\n\n  calculateOverallRating() {\n    const totalRatings = this.ratingsData.ratings[5] + this.ratingsData.ratings[4] + this.ratingsData.ratings[3] + this.ratingsData.ratings[2] + this.ratingsData.ratings[1];\n    const weightedSum = 5 * this.ratingsData.ratings[5] + 4 * this.ratingsData.ratings[4] + 3 * this.ratingsData.ratings[3] + 2 * this.ratingsData.ratings[2] + 1 * this.ratingsData.ratings[1];\n    return weightedSum / totalRatings;\n  }\n\n  calculateAverageRating() {\n    if (this.vendorReviews.length === 0) {\n      return 0; // No reviews yet\n    }\n\n    const totalRating = this.vendorReviews.reduce((acc, review) => acc + review.rating, 0);\n    return totalRating / this.vendorReviews.length;\n  }\n\n  calculateRatingPercentage(star) {\n    const averageRating = this.calculateAverageRating();\n\n    if (averageRating === 0) {\n      return 0;\n    }\n\n    const ratingCount = this.vendorReviews.filter(review => review.rating === star).length;\n    return ratingCount / this.vendorReviews.length * 100;\n  }\n\n  ngOnInit() {\n    this.mapService.initializeMap(this.el.nativeElement.querySelector('#map'));\n    this.getAllVendors();\n    this.getRatingAndReviews();\n  }\n\n  getRatingAndReviews() {\n    this.servicePanelService.getAllRatingAndReviews().subscribe(data => {\n      console.log(data);\n    });\n  }\n\n  getAllVendors() {\n    this.servicePanelService.getAllVendors().subscribe(data => {\n      console.log(data); // Assuming the response data is an array of vendors, update allVenadors\n\n      this.vendorsArray = data;\n    });\n  }\n\n  onSelectVendor(vendor) {\n    this.selectedVendor = vendor;\n    console.log(vendor);\n    this.userService.setSelectedServiceProvider(vendor);\n  }\n\n};\nServiceProviderComponent = __decorate([Component({\n  selector: 'app-service-provider',\n  templateUrl: './service-provider.component.html',\n  styleUrls: ['./service-provider.component.css']\n})], ServiceProviderComponent);\nexport { ServiceProviderComponent };","map":null,"metadata":{},"sourceType":"module"}